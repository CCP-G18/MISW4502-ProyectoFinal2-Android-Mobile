name: Android Coverage and E2E Tests

permissions:
  contents: read

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  unit-tests:
    name: Run Unit Tests with Coverage
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Grant execute permission to Gradlew
        run: chmod +x gradlew

      - name: Run Unit Tests with Coverage
        run: ./gradlew testDebugUnitTestCoverage jacocoTestReport

      - name: Check Coverage Threshold (70%)
        run: ./gradlew checkCoverage

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: app/build/reports/jacoco/

  e2e-tests:
    name: Run Instrumented E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: unit-tests

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Grant execute permission to Gradlew
        run: chmod +x gradlew

      - name: Run E2E Tests on Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          profile: Nexus 6
          disable-animations: true
          disable-linux-hw-accel: true
          emulator-boot-timeout: 800
          emulator-options: -no-window -no-audio -no-boot-anim -gpu swiftshader_indirect -no-snapshot -no-metrics
          script: ./gradlew connectedDebugAndroidTest

      - name: Verify emulator booted and is online
        run: |
          echo "⏳ Waiting for emulator to boot..."
          boot_completed=""
          retry=0
          max_retry=30
          until [[ "$boot_completed" == "1" || $retry -ge $max_retry ]]; do
            sleep 10
            boot_completed=$(adb -e shell getprop sys.boot_completed 2>/dev/null | tr -d '\r')
            echo "Boot status: $boot_completed"
            ((retry++))
          done
          
          if [[ "$boot_completed" != "1" ]]; then
            echo "❌ Emulator failed to boot properly after $((10 * max_retry)) seconds."
            adb devices
            exit 1
          else
            echo "✅ Emulator is up and running!"
          fi
